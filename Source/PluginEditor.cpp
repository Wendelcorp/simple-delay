/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin editor.

  ==============================================================================
*/

#include "PluginProcessor.h"
#include "PluginEditor.h"


//==============================================================================
BasicDelayAudioProcessorEditor::BasicDelayAudioProcessorEditor (BasicDelayAudioProcessor& p)
    : AudioProcessorEditor (&p),
      processor (p),
      delayLengthLabel("", "Delay (sec):"),
      feedbackLabel("", "Feedback:"),
      dryMixLabel("", "Dry:"),
      wetMixLabel("", "Wet:")

{
    // Make sure that before the constructor has finished, you've set the
    // editor's size to whatever you need it to be.
    setSize (690, 471);
    
    delayLengthSlider.setSliderStyle(Slider::Rotary);
    delayLengthSlider.addListener(this);
    delayLengthSlider.setRange(0.01, 2.0, 0.01);
    addAndMakeVisible(&delayLengthSlider);
    
    feedbackSlider.setSliderStyle(Slider::Rotary);
    feedbackSlider.addListener(this);
    feedbackSlider.setRange(0.0, 0.995, 0.005);
    addAndMakeVisible(&feedbackSlider);
    
    dryMixSlider.setSliderStyle(Slider::Rotary);
    dryMixSlider.addListener(this);
    dryMixSlider.setRange(0.0, 1.0, 0.01);
    addAndMakeVisible(&dryMixSlider);

    wetMixSlider.setSliderStyle(Slider::Rotary);
    wetMixSlider.addListener(this);
    wetMixSlider.setRange(0.0, 1.0, 0.01);
    addAndMakeVisible(&wetMixSlider);
    
    delayLengthLabel.attachToComponent(&delayLengthSlider, false);
    delayLengthLabel.setFont(Font (11.0f));

    feedbackLabel.attachToComponent(&feedbackSlider, false);
    feedbackLabel.setFont(Font (11.0f));

    dryMixLabel.attachToComponent(&dryMixSlider, false);
    dryMixLabel.setFont(Font (11.0f));

    wetMixLabel.attachToComponent(&wetMixSlider, false);
    wetMixLabel.setFont(Font (11.0f));
    
    startTimer(50);
}

BasicDelayAudioProcessorEditor::~BasicDelayAudioProcessorEditor()
{
}

//==============================================================================
void BasicDelayAudioProcessorEditor::timerCallback()
{
   BasicDelayAudioProcessor* ourProcessor = getProcessor();
    
    delayLengthSlider.setValue(ourProcessor->delayLength, dontSendNotification);
    feedbackSlider.setValue(ourProcessor->feedback, dontSendNotification);
    dryMixSlider.setValue(ourProcessor->dryMix, dontSendNotification);
    wetMixSlider.setValue(ourProcessor->wetMix, dontSendNotification);
}

void BasicDelayAudioProcessorEditor::sliderValueChanged(Slider* slider)
{
    if (slider == &delayLengthSlider) {
        getProcessor()->setParameterNotifyingHost(BasicDelayAudioProcessor::delayLengthParam, (float) delayLengthSlider.getValue());
    } else if (slider == &feedbackSlider) {
        getProcessor()->setParameterNotifyingHost(BasicDelayAudioProcessor::feedbackParam, (float) feedbackSlider.getValue());
    } else if (slider == &dryMixSlider) {
        getProcessor()->setParameterNotifyingHost(BasicDelayAudioProcessor::dryMixParam, (float) dryMixSlider.getValue());
    } else if (slider == &wetMixSlider) {
        getProcessor()->setParameterNotifyingHost(BasicDelayAudioProcessor::wetMixParam, (float) wetMixSlider.getValue());
    }
}

//==============================================================================
void BasicDelayAudioProcessorEditor::paint (Graphics& g)
{
    // getFromFile();
    g.fillAll (Colours::white);
    // g.drawImage (backgroundImage, 0, 0, getWidth(), getHeight(), 0, 0, backgroundImage.getWidth(), backgroundImage.getHeight(), false );


    g.setColour (Colours::black);
    g.setFont (15.0f);
    g.drawFittedText ("Hello Wo33rld yo2!", getLocalBounds(), Justification::centred, 1);
}

void BasicDelayAudioProcessorEditor::resized()
{
    delayLengthSlider.setBounds(20, 20, 150, 40);
    feedbackSlider.setBounds(200, 20, 150, 40);
    dryMixSlider.setBounds(20, 80, 150, 40);
    wetMixSlider.setBounds(200, 80, 150, 40);
}
